AWSTemplateFormatVersion: 2010-09-09
Description: Password Rotation Template 

Parameters:
  EC2Id:
    Description: Windows EC2 instance ID
    Type: "String"
  LambdaS3Bucket:
    Description: S3 bucket where password rotation Lambda zipped code is stored
    Type: "String"
  LambdaS3BucketKey:
    Description: S3 key for zip file where password rotation Lambda is stored
    Type: "String"

Resources:

  # Administrator password secret stored in AWS Secrets Manager
  EC2PasswordSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        SecretStringTemplate: !Join ['', ['{"username": "', "Administrator", '"}']]
        GenerateStringKey: "password"
        ExcludePunctuation: false
        PasswordLength: 16
      Tags:
        - Key: instance-id
          Value: !Ref EC2Id

  # Rotation schedule for the administrator password secret. Default: every 90 days
  RotationSchedule:
    Type: AWS::SecretsManager::RotationSchedule
    DependsOn: LambdaPermissions
    Properties: 
      RotationLambdaARN: !GetAtt RotatePassword.Arn
      RotationRules: 
        AutomaticallyAfterDays: 90
      SecretId: !Ref EC2PasswordSecret

  # Password rotation Lambda function
  RotatePassword:
    Type: AWS::Lambda::Function
    Properties:
      Description: Function to rotate password of windows instance
      Code:
        S3Bucket: !Ref LambdaS3Bucket
        S3Key: !Ref LambdaS3BucketKey
      FunctionName: ec2-password-rotation
      Role: !GetAtt ExecutionRole.Arn
      Runtime: python3.8
      Handler: password-rotation.lambda_handler
      Timeout: 60

  # Permissions for the AWS Secret Manager to invoke Lambda
  LambdaPermissions:
    Type: AWS::Lambda::Permission
    Properties: 
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt RotatePassword.Arn
      Principal: 'secretsmanager.amazonaws.com'

  # Lambda execution role to allow AWS SSM and AWS Secrets Manager access
  ExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        - "arn:aws:iam::aws:policy/AmazonSSMFullAccess"
      Policies:
        - PolicyName: SecretsManagerPermissions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                - "secretsmanager:DescribeSecret"
                - "secretsmanager:GetSecretValue"
                - "secretsmanager:PutSecretValue"
                - "secretsmanager:UpdateSecretVersionStage"
                - "secretsmanager:GetRandomPassword"
                Resource: '*'